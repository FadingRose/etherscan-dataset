{
  "TxHash": "0x41c4d80d8769c7e1ad7b796fa9de26f33500d71ad4f2aa91a58a43ce7b512b8a",
  "ContractAddress": "0x9869f1de195b0b597a152c0b67334d47ca7eddcb",
  "Name": "Challenge",
  "PackageStatus": 0,
  "status": "1",
  "message": "OK",
  "result": [
    {
      "SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract Challenge {\r\n    struct ChallengeDetails {\r\n        string title;\r\n        string description;\r\n        uint256 reward;\r\n        address creator;\r\n        bool isCompleted;\r\n    }\r\n\r\n    ChallengeDetails[] public challenges;\r\n    mapping(uint256 =\u003e address) public challengers;\r\n    mapping(uint256 =\u003e bool) public challengeAccepted;\r\n    mapping(address =\u003e uint256) public userChallengesCount;\r\n\r\n    event ChallengeCreated(uint256 challengeId, string title, string description, uint256 reward, address creator);\r\n    event ChallengeAccepted(uint256 challengeId, address challenger);\r\n    event ChallengeCompleted(uint256 challengeId, address challenger, uint256 reward);\r\n\r\n    function createChallenge(string memory _title, string memory _description) public payable {\r\n        require(msg.value \u003e 0, \"Reward must be greater than zero\");\r\n\r\n        ChallengeDetails memory newChallenge = ChallengeDetails({\r\n            title: _title,\r\n            description: _description,\r\n            reward: msg.value,\r\n            creator: msg.sender,\r\n            isCompleted: false\r\n        });\r\n\r\n        challenges.push(newChallenge);\r\n        uint256 challengeId = challenges.length - 1;\r\n        userChallengesCount[msg.sender] += 1;\r\n\r\n        emit ChallengeCreated(challengeId, _title, _description, msg.value, msg.sender);\r\n    }\r\n\r\n    function acceptChallenge(uint256 _challengeId) public {\r\n        require(_challengeId \u003c challenges.length, \"Challenge does not exist\");\r\n        require(!challengeAccepted[_challengeId], \"Challenge already accepted\");\r\n\r\n        challengers[_challengeId] = msg.sender;\r\n        challengeAccepted[_challengeId] = true;\r\n\r\n        emit ChallengeAccepted(_challengeId, msg.sender);\r\n    }\r\n\r\n    function completeChallenge(uint256 _challengeId) public {\r\n        require(_challengeId \u003c challenges.length, \"Challenge does not exist\");\r\n        require(challengeAccepted[_challengeId], \"Challenge not accepted\");\r\n        require(challengers[_challengeId] == msg.sender, \"Only challenger can complete the challenge\");\r\n        require(!challenges[_challengeId].isCompleted, \"Challenge already completed\");\r\n\r\n        challenges[_challengeId].isCompleted = true;\r\n        uint256 reward = challenges[_challengeId].reward;\r\n        payable(msg.sender).transfer(reward);\r\n\r\n        emit ChallengeCompleted(_challengeId, msg.sender, reward);\r\n    }\r\n\r\n    function getChallenge(uint256 _challengeId) public view returns (ChallengeDetails memory) {\r\n        require(_challengeId \u003c challenges.length, \"Challenge does not exist\");\r\n        return challenges[_challengeId];\r\n    }\r\n\r\n    function getAllChallenges() public view returns (ChallengeDetails[] memory) {\r\n        return challenges;\r\n    }\r\n}",
      "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"challengeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"challenger\",\"type\":\"address\"}],\"name\":\"ChallengeAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"challengeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"challenger\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"ChallengeCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"challengeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"ChallengeCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_challengeId\",\"type\":\"uint256\"}],\"name\":\"acceptChallenge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"challengeAccepted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"challengers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"challenges\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isCompleted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_challengeId\",\"type\":\"uint256\"}],\"name\":\"completeChallenge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"createChallenge\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllChallenges\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isCompleted\",\"type\":\"bool\"}],\"internalType\":\"struct Challenge.ChallengeDetails[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_challengeId\",\"type\":\"uint256\"}],\"name\":\"getChallenge\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isCompleted\",\"type\":\"bool\"}],\"internalType\":\"struct Challenge.ChallengeDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userChallengesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
      "ContractName": "Challenge",
      "CompilerVersion": "v0.8.26+commit.8a97fa7a",
      "OptimizationUsed": "0",
      "Runs": "200",
      "ConstructorArguments": "",
      "EVMVersion": "Default",
      "Library": "",
      "LicenseType": "MIT",
      "Proxy": "0",
      "Implementation": "",
      "SwarmSource": "ipfs://67d4ea929e61ee16c18aad5d35976889093c65b83cdcd8b5ffa91ac0c49dc5a1"
    }
  ]
}
