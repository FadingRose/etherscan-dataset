{
  "TxHash": "0x610de756cbacbc87d971bb03eef6b125bbf7cac689378c7758888129d0d65a9b",
  "ContractAddress": "0xff12c0df72e02ab9c1fd8b986d21ff8992a8ccee",
  "Name": "Root Gauge Factory Proxy Owner",
  "PackageStatus": 0,
  "status": "1",
  "message": "OK",
  "result": [
    {
      "SourceCode": "# pragma version 0.3.7\r\n\"\"\"\r\n@title Root Gauge Factory Proxy Owner\r\n@license MIT\r\n@author CurveFi\r\n\"\"\"\r\n\r\nversion: public(constant(String[8])) = \"1.0.1\"\r\n\r\n\r\ninterface Factory:\r\n    def accept_transfer_ownership(): nonpayable\r\n    def commit_transfer_ownership(_future_owner: address): nonpayable\r\n    def set_child(_chain_id: uint256, _bridger: address, _child_factory: address, _child_impl: address): nonpayable\r\n    def set_bridger(_chain_id: uint256, _bridger: address): nonpayable\r\n    def set_call_proxy(_new_call_proxy: address): nonpayable\r\n    def set_implementation(_implementation: address): nonpayable\r\n\r\ninterface LiquidityGauge:\r\n    def set_killed(_killed: bool): nonpayable\r\n    def set_child_gauge(_child: address): nonpayable\r\n\r\n\r\nevent CommitAdmins:\r\n    ownership_admin: indexed(address)\r\n    emergency_admin: indexed(address)\r\n\r\nevent ApplyAdmins:\r\n    ownership_admin: indexed(address)\r\n    emergency_admin: indexed(address)\r\n\r\nevent SetManager:\r\n    _manager: indexed(address)\r\n\r\n\r\nownership_admin: public(address)\r\nemergency_admin: public(address)\r\n\r\nfuture_ownership_admin: public(address)\r\nfuture_emergency_admin: public(address)\r\n\r\nmanager: public(address)\r\n\r\n\r\n@external\r\ndef __init__():\r\n    self.ownership_admin = 0x40907540d8a6C65c637785e8f8B742ae6b0b9968\r\n    self.emergency_admin = 0x467947EE34aF926cF1DCac093870f613C96B1E0c\r\n\r\n    self.manager = msg.sender\r\n    log SetManager(msg.sender)\r\n\r\n\r\n@external\r\ndef commit_set_admins(_o_admin: address, _e_admin: address):\r\n    \"\"\"\r\n    @notice Set ownership admin to `_o_admin` and emergency admin to `_e_admin`\r\n    @param _o_admin Ownership admin\r\n    @param _e_admin Emergency admin\r\n    \"\"\"\r\n    assert msg.sender == self.ownership_admin, \"Access denied\"\r\n\r\n    self.future_ownership_admin = _o_admin\r\n    self.future_emergency_admin = _e_admin\r\n\r\n    log CommitAdmins(_o_admin, _e_admin)\r\n\r\n\r\n@external\r\ndef accept_set_admins():\r\n    \"\"\"\r\n    @notice Apply the effects of `commit_set_admins`\r\n    @dev Only callable by the new owner admin\r\n    \"\"\"\r\n    assert msg.sender == self.future_ownership_admin, \"Access denied\"\r\n\r\n    e_admin: address = self.future_emergency_admin\r\n    self.ownership_admin = msg.sender\r\n    self.emergency_admin = e_admin\r\n\r\n    log ApplyAdmins(msg.sender, e_admin)\r\n\r\n\r\n@external\r\ndef set_manager(_new_manager: address):\r\n    \"\"\"\r\n    @notice Set the manager account which is not capable of killing gauges.\r\n    @param _new_manager The new manager account\r\n    \"\"\"\r\n    assert msg.sender in [self.ownership_admin, self.emergency_admin, self.manager]\r\n    self.manager = _new_manager\r\n    log SetManager(_new_manager)\r\n\r\n\r\n@external\r\ndef commit_transfer_ownership(_factory: Factory, _new_owner: address):\r\n    \"\"\"\r\n    @notice Transfer ownership for factory `_factory` to `new_owner`\r\n    @param _factory Factory which ownership is to be transferred\r\n    @param _new_owner New factory owner address\r\n    \"\"\"\r\n    assert msg.sender == self.ownership_admin, \"Access denied\"\r\n    _factory.commit_transfer_ownership(_new_owner)\r\n\r\n\r\n@external\r\ndef accept_transfer_ownership(_factory: Factory):\r\n    \"\"\"\r\n    @notice Apply transferring ownership of `_factory`\r\n    @param _factory Factory address\r\n    \"\"\"\r\n    _factory.accept_transfer_ownership()\r\n\r\n\r\n@external\r\ndef set_child_gauge(_root: LiquidityGauge, _child: address):\r\n    \"\"\"\r\n    @notice Set child gauge address to bridge coins to\r\n    @param _root Root gauge address\r\n    @param _child Child gauge address\r\n    \"\"\"\r\n    assert msg.sender == self.ownership_admin, \"Access denied\"\r\n\r\n    _root.set_child_gauge(_child)\r\n\r\n\r\n@external\r\ndef set_killed(_gauge: LiquidityGauge, _is_killed: bool):\r\n    \"\"\"\r\n    @notice Set the killed status for `_gauge`\r\n    @dev When killed, the gauge always yields a rate of 0 and so cannot mint CRV\r\n    @param _gauge Gauge address\r\n    @param _is_killed Killed status to set\r\n    \"\"\"\r\n    assert msg.sender in [self.ownership_admin, self.emergency_admin], \"Access denied\"\r\n\r\n    _gauge.set_killed(_is_killed)\r\n\r\n\r\n@external\r\ndef set_child(_factory: Factory, _chain_id: uint256, _bridger: address, _child_factory: address, _child_impl: address):\r\n    \"\"\"\r\n    @notice Set contracts used for `_chain_id` on `_factory`\r\n    \"\"\"\r\n    assert msg.sender in [self.ownership_admin, self.manager]\r\n\r\n    _factory.set_child(_chain_id, _bridger, _child_factory, _child_impl)\r\n\r\n\r\n@external\r\ndef set_bridger(_factory: Factory, _chain_id: uint256, _bridger: address):\r\n    \"\"\"\r\n    @notice Set the bridger used for `_chain_id` on `_factory`, for older implementation\r\n    \"\"\"\r\n    assert msg.sender in [self.ownership_admin, self.manager]\r\n\r\n    _factory.set_bridger(_chain_id, _bridger)\r\n\r\n\r\n@external\r\ndef set_implementation(_factory: Factory, _implementation: address):\r\n    \"\"\"\r\n    @notice Set the gauge implementation used by `_factory`\r\n    \"\"\"\r\n    assert msg.sender in [self.ownership_admin, self.manager]\r\n\r\n    _factory.set_implementation(_implementation)\r\n\r\n\r\n@external\r\ndef set_call_proxy(_factory: Factory, _new_call_proxy: address):\r\n    \"\"\"\r\n    @notice Set the call proxy messenger used by `_factory`\r\n    \"\"\"\r\n    assert msg.sender in [self.ownership_admin, self.manager]\r\n\r\n    _factory.set_call_proxy(_new_call_proxy)",
      "ABI": "[{\"name\":\"CommitAdmins\",\"inputs\":[{\"name\":\"ownership_admin\",\"type\":\"address\",\"indexed\":true},{\"name\":\"emergency_admin\",\"type\":\"address\",\"indexed\":true}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"ApplyAdmins\",\"inputs\":[{\"name\":\"ownership_admin\",\"type\":\"address\",\"indexed\":true},{\"name\":\"emergency_admin\",\"type\":\"address\",\"indexed\":true}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"SetManager\",\"inputs\":[{\"name\":\"_manager\",\"type\":\"address\",\"indexed\":true}],\"anonymous\":false,\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"inputs\":[],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"commit_set_admins\",\"inputs\":[{\"name\":\"_o_admin\",\"type\":\"address\"},{\"name\":\"_e_admin\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"accept_set_admins\",\"inputs\":[],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_manager\",\"inputs\":[{\"name\":\"_new_manager\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"commit_transfer_ownership\",\"inputs\":[{\"name\":\"_factory\",\"type\":\"address\"},{\"name\":\"_new_owner\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"accept_transfer_ownership\",\"inputs\":[{\"name\":\"_factory\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_child_gauge\",\"inputs\":[{\"name\":\"_root\",\"type\":\"address\"},{\"name\":\"_child\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_killed\",\"inputs\":[{\"name\":\"_gauge\",\"type\":\"address\"},{\"name\":\"_is_killed\",\"type\":\"bool\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_child\",\"inputs\":[{\"name\":\"_factory\",\"type\":\"address\"},{\"name\":\"_chain_id\",\"type\":\"uint256\"},{\"name\":\"_bridger\",\"type\":\"address\"},{\"name\":\"_child_factory\",\"type\":\"address\"},{\"name\":\"_child_impl\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_bridger\",\"inputs\":[{\"name\":\"_factory\",\"type\":\"address\"},{\"name\":\"_chain_id\",\"type\":\"uint256\"},{\"name\":\"_bridger\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_implementation\",\"inputs\":[{\"name\":\"_factory\",\"type\":\"address\"},{\"name\":\"_implementation\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_call_proxy\",\"inputs\":[{\"name\":\"_factory\",\"type\":\"address\"},{\"name\":\"_new_call_proxy\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"version\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"string\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"ownership_admin\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"emergency_admin\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"future_ownership_admin\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"future_emergency_admin\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"manager\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]}]",
      "ContractName": "Root Gauge Factory Proxy Owner",
      "CompilerVersion": "vyper:0.3.7",
      "OptimizationUsed": "0",
      "Runs": "0",
      "ConstructorArguments": "",
      "EVMVersion": "Default",
      "Library": "",
      "LicenseType": "MIT",
      "Proxy": "0",
      "Implementation": "",
      "SwarmSource": ""
    }
  ]
}
