{
  "TxHash": "0x70dfb551be6169cf4f014417953f41991f6f1c771de5d2baf86d746f80b517f5",
  "ContractAddress": "0xd92b544dc7f1b6ee943b7b31c16972aadeb59661",
  "Name": "Baibon",
  "PackageStatus": 0,
  "status": "1",
  "message": "OK",
  "result": [
    {
      "SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n/*                                              \r\n  Website :    https://crypto-debate.com\r\n  Twitter :    https://x.com/Baibon_Trambon\r\n  Telegram :   https://t.me/Baibon_Trambon\r\n*/\r\n\r\n/**\r\n * @title ERC20\r\n * @dev Implementation of the basic standard token.\r\n */\r\ncontract ERC20 {\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals = 18;\r\n    uint256 public totalSupply;\r\n    mapping(address =\u003e uint256) public balanceOf;\r\n    mapping(address =\u003e mapping(address =\u003e uint256)) public allowance;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    constructor(string memory _name, string memory _symbol) {\r\n        name = _name;\r\n        symbol = _symbol;\r\n    }\r\n\r\n    function transfer(address to, uint256 value) public returns (bool success) {\r\n        require(balanceOf[msg.sender] \u003e= value, \"Insufficient balance\");\r\n        balanceOf[msg.sender] -= value;\r\n        balanceOf[to] += value;\r\n        emit Transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint256 value) public returns (bool success) {\r\n        allowance[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool success) {\r\n        require(value \u003c= balanceOf[from], \"Insufficient balance\");\r\n        require(value \u003c= allowance[from][msg.sender], \"Allowance exceeded\");\r\n        balanceOf[from] -= value;\r\n        balanceOf[to] += value;\r\n        allowance[from][msg.sender] -= value;\r\n        emit Transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    function _mint(address account, uint256 amount) internal {\r\n        require(account != address(0), \"Mint to the zero address\");\r\n        totalSupply += amount;\r\n        balanceOf[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n}\r\n\r\n/**\r\n * @title Baibon\r\n * @dev ERC20 Token with customizable name, symbol, and initial supply.\r\n * \r\n * The contract allows for the creation of an ERC20 token with the following features:\r\n * - Customizable token name and symbol, specified at deployment.\r\n * - Initial supply of tokens, distributed to a specified liquidity address.\r\n * - Ownership of the contract can be renounced, rendering some functions inaccessible.\r\n */\r\ncontract Baibon is ERC20 {\r\n    address public owner;\r\n\r\n    event OwnershipRenounced(address indexed previousOwner);\r\n    event TokensDistributed(address indexed to, uint256 amount);\r\n\r\n    /*\r\n     * @dev Sets the values for {name}, {symbol}, {initialSupply}, and {Liquidity}.\r\n     * Mints the {initialSupply} of tokens and distributes them: 10% to the deployer's address and 90% to the {Liquidity} address.\r\n     *\r\n     * @param name The name of the token.\r\n     * @param symbol The symbol of the token.\r\n     * @param initialSupply The initial supply of the token.\r\n     * @param Liquidity The account to receive 90% of the initial supply.\r\n     */\r\n\r\n    constructor(\r\n        string memory name,\r\n        string memory symbol,\r\n        uint256 initialSupply,\r\n        address Liquidity\r\n    ) ERC20(name, symbol) {\r\n        uint256 deployerShare = initialSupply / 10;\r\n        uint256 liquidityShare = initialSupply - deployerShare;\r\n\r\n        _mint(msg.sender, deployerShare);\r\n        _mint(Liquidity, liquidityShare);\r\n        \r\n        owner = msg.sender;\r\n\r\n        emit TokensDistributed(msg.sender, deployerShare);\r\n        emit TokensDistributed(Liquidity, liquidityShare);\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Not the contract owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current owner to relinquish control of the contract.\r\n     * This operation cannot be undone.\r\n     * Added a confirmation step to avoid accidental renouncement.\r\n     */\r\n    function renounceOwnership() public onlyOwner {\r\n        require(owner != address(0), \"Ownership already renounced\");\r\n        emit OwnershipRenounced(owner);\r\n        owner = address(0);\r\n    }\r\n}",
      "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"Liquidity\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
      "ContractName": "Baibon",
      "CompilerVersion": "v0.8.20+commit.a1b79de6",
      "OptimizationUsed": "1",
      "Runs": "200",
      "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000129c8f71ad02e2a680000000000000000000000000000003ee29be0bdf84f3d648f9e743cf4ab0bf076d03d0000000000000000000000000000000000000000000000000000000000000006426169626f6e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006424149424f4e0000000000000000000000000000000000000000000000000000",
      "EVMVersion": "Default",
      "Library": "",
      "LicenseType": "MIT",
      "Proxy": "0",
      "Implementation": "",
      "SwarmSource": "ipfs://7f8c5de72648ec1aa67072aaea4657c04426e829c3e22cdb22b2f234baf80b8a"
    }
  ]
}
