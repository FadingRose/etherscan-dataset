{
  "TxHash": "0x8176363ebd6406d115361c0cc1a1d1d19fa11d7fd5dceabe15259c66f80fd1f5",
  "ContractAddress": "0xe78Ff92512CBf2978bD00F8f443326EC1839a8C6",
  "Name": "ConstantPriceAdapter",
  "PackageStatus": 0,
  "status": "1",
  "message": "OK",
  "result": [
    {
      "SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"settings\": {\r\n    \"evmVersion\": \"london\",\r\n    \"libraries\": {},\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"ipfs\",\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"remappings\": [],\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  \"sources\": {\r\n    \"contracts/auction-pricing/ConstantPriceAdapter.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.17;\\n\\n/**\\n * @title ConstantPriceAdapter\\n * @author Index Coop\\n * @notice Price adapter contract for AuctionRebalanceModuleV1 that returns a constant price.\\n * The rate of change is zero.\\n * Price formula: price = initialPrice\\n */\\ncontract ConstantPriceAdapter {\\n    /**\\n     * @dev Calculates and returns the constant price.\\n     *\\n     * @param _priceAdapterConfigData   Encoded bytes representing the constant price.\\n     *\\n     * @return price                    The constant price decoded from _priceAdapterConfigData.\\n     */\\n    function getPrice(\\n        address /* _setToken */,\\n        address /* _component */,\\n        uint256 /* _componentQuantity */,\\n        uint256 /* _timeElapsed */,\\n        uint256 /* _duration */,\\n        bytes memory _priceAdapterConfigData\\n    )\\n        external\\n        pure\\n        returns (uint256 price)\\n    {\\n        price = getDecodedData(_priceAdapterConfigData);\\n        require(price \u003e 0, \\\"ConstantPriceAdapter: Price must be greater than 0\\\");\\n    }\\n\\n    /**\\n     * @notice Returns true if the price adapter configuration data is valid.\\n     *\\n     * @param _priceAdapterConfigData   Encoded bytes representing the constant price.\\n     *\\n     * @return isValid                  True if the constant price is greater than 0, False otherwise.\\n     */\\n    function isPriceAdapterConfigDataValid(\\n        bytes memory _priceAdapterConfigData\\n    )\\n        external\\n        pure\\n        returns (bool isValid)\\n    {\\n        uint256 price = getDecodedData(_priceAdapterConfigData);\\n        isValid = price \u003e 0;\\n    }\\n\\n    /**\\n     * @notice Encodes the constant price into bytes.\\n     *\\n     * @param _price  The constant price in base units.\\n     *\\n     * @return        Encoded bytes representing the constant price.\\n     */\\n    function getEncodedData(uint256 _price) external pure returns (bytes memory) {\\n        return abi.encode(_price);\\n    }\\n\\n    /**\\n     * @dev Decodes the constant price from the provided bytes.\\n     *\\n     * @param _data  Encoded bytes representing the constant price.\\n     *\\n     * @return       The constant price decoded from bytes in base units.\\n     */\\n    function getDecodedData(bytes memory _data) public pure returns (uint256) {\\n        return abi.decode(_data, (uint256));\\n    }\\n}\\n\"\r\n    }\r\n  }\r\n}}",
      "ABI": "[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"getDecodedData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"getEncodedData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_priceAdapterConfigData\",\"type\":\"bytes\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_priceAdapterConfigData\",\"type\":\"bytes\"}],\"name\":\"isPriceAdapterConfigDataValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]",
      "ContractName": "ConstantPriceAdapter",
      "CompilerVersion": "v0.8.17+commit.8df45f5f",
      "OptimizationUsed": "1",
      "Runs": "200",
      "ConstructorArguments": "",
      "EVMVersion": "london",
      "Library": "",
      "LicenseType": "Apache-2.0",
      "Proxy": "0",
      "Implementation": "",
      "SwarmSource": ""
    }
  ]
}
