{
  "TxHash": "0x5d5ee949663e32e82cf791aece92fea808e4c9a4884a427d4ef9431465cffa78",
  "ContractAddress": "0x4fd6cd0eed6a2d985db859a71633513bbd7d3cd9",
  "Name": "TSION",
  "PackageStatus": 0,
  "status": "1",
  "message": "OK",
  "result": [
    {
      "SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.26;\r\n\r\ncontract Ownable \r\n{\r\n    address private _owner;   \r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return payable(msg.sender);\r\n    }\r\n\r\n    constructor(address __owner) \r\n    {\r\n        _owner = __owner;\r\n        emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n\r\n    function owner() public view returns (address) \r\n    {\r\n        return _owner;\r\n    }   \r\n    \r\n    modifier onlyOwner() \r\n    {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n    \r\n    function renounceOwnership() public virtual onlyOwner \r\n    {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner \r\n    {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\n\r\n\r\ncontract LockToken is Ownable {\r\n\r\n    bool public isOpen = false;\r\n    \r\n    mapping(address =\u003e bool) private _whiteList;\r\n    modifier open(address from, address to) {\r\n        require(isOpen || _whiteList[from] || _whiteList[to], \"Not Open\");\r\n        _;\r\n    }\r\n\r\n    constructor(address __owner) Ownable(__owner) {\r\n        _whiteList[__owner] = true;\r\n        _whiteList[address(this)] = true;\r\n    }\r\n\r\n    function openTrade() external onlyOwner {\r\n        isOpen = true;\r\n    }\r\n\r\n\r\n    function includeToWhiteList(address[] memory _users) external onlyOwner {\r\n        for(uint8 i = 0; i \u003c _users.length; i++) {\r\n            _whiteList[_users[i]] = true;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\ncontract TSION is LockToken \r\n{\r\n    mapping (address =\u003e uint256) private _balances;\r\n    mapping (address =\u003e mapping (address =\u003e uint256)) private _allowances;\r\n    mapping (address =\u003e bool) private _isExcludedFromFee;\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    uint256 private _totalSupply;\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private _decimals;\r\n    \r\n    address public marketingWallet = 0xaa23eEAD59ED2756Cb068DEDb744b78C9F7605b2;\r\n\r\n    uint256 public marketingFee = 2;\r\n\r\n    mapping (address =\u003e bool) private _isExcludedFromWhale;\r\n    uint256 public _walletHoldingMaxLimit;\r\n\r\n    constructor(address __owner) LockToken(__owner)\r\n    { \r\n      _name = \"TSION\";\r\n      _symbol = \"Tsion\";\r\n      _decimals = 18;\r\n      _init(owner(), 1_000_000_000 * 10**18);\r\n      _isExcludedFromFee[owner()] = true;\r\n      _isExcludedFromFee[marketingWallet] = true;\r\n      _isExcludedFromFee[address(this)] = true;\r\n      _isExcludedFromWhale[owner()]=true;\r\n      _isExcludedFromWhale[address(this)]=true;\r\n      _isExcludedFromWhale[address(0)]=true;\r\n      _isExcludedFromWhale[marketingWallet]=true;\r\n      _walletHoldingMaxLimit = 10_000_000 * 10**18;\r\n    }\r\n\r\n\r\n    function name() public view virtual returns (string memory) \r\n    {\r\n        return _name;\r\n    }\r\n\r\n\r\n    function symbol() public view virtual returns (string memory) \r\n    {\r\n        return _symbol;\r\n    }\r\n\r\n\r\n    function decimals() public view virtual returns (uint8) \r\n    {\r\n        return _decimals;\r\n    }\r\n\r\n \r\n    function totalSupply() public view  returns (uint256) \r\n    {\r\n        return _totalSupply;\r\n    }\r\n\r\n\r\n    function balanceOf(address account) public view  returns (uint256) \r\n    {\r\n        return _balances[account];\r\n    }\r\n\r\n    \r\n    function transfer(address recipient, uint256 amount) public  returns (bool) \r\n    {\r\n         _transferTokens(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n    function allowance(address owner, address spender) public view  returns (uint256) \r\n    {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n\r\n    function approve(address spender, uint256 amount) public returns (bool) \r\n    {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public  returns (bool) \r\n    {\r\n        _transferTokens(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()]-amount);\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) \r\n    {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender]+addedValue);\r\n        return true;\r\n    }\r\n\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) \r\n    {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender]-subtractedValue);\r\n        return true;\r\n    }\r\n    \r\n\r\n    function _transferTokens(address sender, address recipient, uint256 amount) internal virtual \r\n    {\r\n        uint256 marketingTokens = 0;\r\n\r\n        if(!_isExcludedFromFee[sender] \u0026\u0026 !_isExcludedFromFee[recipient]) \r\n        { \r\n            marketingTokens = (amount*marketingFee)/100;\r\n            amount = amount-marketingTokens;\r\n        }\r\n\r\n\r\n        if(marketingTokens\u003e0) \r\n        {\r\n            _transfer(sender, marketingWallet, marketingTokens);\r\n        }  \r\n\r\n        _transfer(sender, recipient, amount);\r\n\r\n    }\r\n\r\n\r\n\r\n    function _transfer(address sender, address recipient, uint256 amount) internal open(sender, recipient) \r\n    {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n        require(_balances[sender] \u003e= amount, \"ERC20: Cannot send more available balance\");\r\n        _balances[sender] = _balances[sender]-amount;\r\n        _balances[recipient] = _balances[recipient]+amount;\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    // this is an internal function for one time call at deployment \r\n    function _init(address account, uint256 amount) internal virtual \r\n    {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n        _totalSupply = _totalSupply+amount;\r\n        _balances[account] = _balances[account]+amount;\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n\r\n    function _approve(address owner, address spender, uint256 amount) internal virtual \r\n    {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n\r\n\r\n    function checkForWhale(address from, address to, uint256 amount) private view\r\n    {\r\n        uint256 newBalance = balanceOf(to)+amount;\r\n        if(!_isExcludedFromWhale[from] \u0026\u0026 !_isExcludedFromWhale[to]) \r\n        { \r\n            require(newBalance \u003c= _walletHoldingMaxLimit, \"Exceeding max tokens limit in the wallet\"); \r\n        } \r\n    }\r\n\r\n    function setExcludedFromWhale(address account, bool _enabled) public onlyOwner \r\n    {\r\n        _isExcludedFromWhale[account] = _enabled;\r\n    } \r\n\r\n\r\n}",
      "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"__owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_walletHoldingMaxLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_users\",\"type\":\"address[]\"}],\"name\":\"includeToWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"setExcludedFromWhale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
      "ContractName": "TSION",
      "CompilerVersion": "v0.8.26+commit.8a97fa7a",
      "OptimizationUsed": "1",
      "Runs": "200",
      "ConstructorArguments": "00000000000000000000000039a7e6abbc6e5e5bf91a12dae277c45f0e962f7e",
      "EVMVersion": "Default",
      "Library": "",
      "LicenseType": "MIT",
      "Proxy": "0",
      "Implementation": "",
      "SwarmSource": "ipfs://4c4d86134d1b52ec4aa52a9d69a810756fe728df85ddd749a084ec7d84a4f475"
    }
  ]
}
