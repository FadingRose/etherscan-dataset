{
  "TxHash": "0x761e8b4b34b1fa377c322ed293da4806a835f02618746fd474f45db503965bc7",
  "ContractAddress": "0x4a831a8ebb160ad025d34a788c99e9320b9ab531",
  "Name": "Bridge",
  "PackageStatus": 0,
  "status": "1",
  "message": "OK",
  "result": [
    {
      "SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\n\r\ninterface IBridge {\r\n    function bridgeToken(address token_address, uint256  value, bytes3 destination, bytes calldata destination_address) external;\r\n    function unlockBridgedToken(bytes32 txHash, bytes3 source, address token, address to, uint256 value) external;\r\n    function unlocked(address sender,address token, uint value) external;\r\n    function isUnlocked(bytes32 hash) external  view returns(bool);\r\n\r\n}\r\n\r\ninterface IERC20 {\r\n    function transferFrom(address sender,address recipient,uint256 amount) external returns (bool);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function balanceOf(address owner) external returns (uint256);\r\n}\r\n\r\ncontract Bridge{\r\n    \r\n    uint8 immutable public networkId;\r\n    address immutable public nodeConsensus;\r\n    address immutable public ownersConsensus;\r\n\r\n    mapping(bytes32 tx_hash =\u003e bool check) _isUnlocked;\r\n\r\n    constructor(uint8 _networkid, address _nodeConsensus, address _ownersConsensus) {\r\n        networkId = _networkid;\r\n        nodeConsensus = _nodeConsensus;\r\n        ownersConsensus = _ownersConsensus;\r\n    }\r\n\r\n    modifier onlyConsensusNodes(){\r\n        require(msg.sender == nodeConsensus,\"Call the consensus node function\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyConsensusOwners(){\r\n        require(msg.sender == ownersConsensus,\"Call the consensus node function\");\r\n        _;\r\n    }\r\n\r\n    event BridgeRequest (address sender, address token, uint256 value,uint8 netID, bytes3  destination, bytes destination_address);\r\n    event UnlockedBridged(bytes32  txHash, bytes3 source, address token, address to, uint256 value);\r\n    event UnlockedLiquidity(address token, address to, uint256 value);\r\n\r\n    function bridgeToken(address token, uint256  value, bytes3 destination, bytes calldata destination_address) external{\r\n        IERC20(token).transferFrom(msg.sender, address(this), value);\r\n        emit BridgeRequest(msg.sender, token, value, networkId, destination, destination_address);\r\n    }\r\n\r\n    function unlockBridgedToken(bytes32 txHash, bytes3 source, address token, address to, uint256 value) public onlyConsensusNodes{\r\n        IERC20(token).transfer(to, value);\r\n        bytes32 hash = keccak256(abi.encode(txHash,source));\r\n        _isUnlocked[hash] = true;\r\n        emit UnlockedBridged(txHash, source, token, to, value);\r\n    }\r\n\r\n    function unlocked(address sender,address token, uint value) external onlyConsensusOwners{\r\n        IERC20(token).transfer(sender, value);\r\n        emit UnlockedLiquidity(token, sender, value);\r\n    }\r\n\r\n    function isUnlocked(bytes32 hash) public view returns(bool) {\r\n        return _isUnlocked[hash];\r\n    }\r\n\r\n}",
      "ABI": "[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_networkid\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_nodeConsensus\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ownersConsensus\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"netID\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes3\",\"name\":\"destination\",\"type\":\"bytes3\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"destination_address\",\"type\":\"bytes\"}],\"name\":\"BridgeRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes3\",\"name\":\"source\",\"type\":\"bytes3\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"UnlockedBridged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"UnlockedLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes3\",\"name\":\"destination\",\"type\":\"bytes3\"},{\"internalType\":\"bytes\",\"name\":\"destination_address\",\"type\":\"bytes\"}],\"name\":\"bridgeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"isUnlocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"networkId\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nodeConsensus\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownersConsensus\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes3\",\"name\":\"source\",\"type\":\"bytes3\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"unlockBridgedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"unlocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
      "ContractName": "Bridge",
      "CompilerVersion": "v0.8.26+commit.8a97fa7a",
      "OptimizationUsed": "1",
      "Runs": "200",
      "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000000100000000000000000000000092cf67713f5ec181fd6999f18af796a6763a225b0000000000000000000000007fb0147936b7e0dde22e9b6ec123f87908a9a516",
      "EVMVersion": "Default",
      "Library": "",
      "LicenseType": "MIT",
      "Proxy": "0",
      "Implementation": "",
      "SwarmSource": "ipfs://29d27a65f503ef87b2dcf2b5defa5c92f921cc7ee615c0f70a8f42add1996973"
    }
  ]
}
